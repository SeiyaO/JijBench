name: python-test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  Python-Test:
    if: ${{ !contains(github.head_ref, 'dependabot/github_actions') }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10' ]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Poetry
        shell: bash
        run:  |
          set -eux
          python -m pip install -r requirements.txt
      - name: Poetry lock
        shell: bash
        run :
          set -eux
          poetry lock
      - name: Poetry Install
        shell: bash
        run:  |
          set -eux
          poetry install
      - name: Test
        shell: bash
        run: |
          set -eux
          poetry run pytest
      - name:  Generate Coverage File
        shell: bash
        if: always()
        run: |
          set -eux
          poetry run coverage xml
          poetry run coverage json
          poetry run coverage lcov
      - uses:              codecov/codecov-action@v3
        if: always()
        continue-on-error: true
        env:
          OS: ${{ matrix.os }}
          PYTHON: ${{ matrix.python-version }}
        with:
          token:            ${{ secrets.CODECOV_TOKEN }}
          env_vars:         OS,PYTHON,POETRY
          files:            coverage.xml, coverage.json, coverage.lcov
          fail_ci_if_error: false
          verbose:          true